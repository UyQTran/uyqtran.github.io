var e=[{title:"Mitt f\xF8rste program",description:"P\xE5 denne siden s\xE5 kan du kode i et programmeringsspr\xE5k som heter Python. P\xE5 denne siden ser du to hvite bokser. Den \xF8verste er editoren din, mens boksen under er output-feltet. Output-feltet er boksen som skriver ut resultatet av koden i editoren n\xE5r du trykker p\xE5 kj\xF8reknappen. P\xE5 eksempelet, ser du et funksjonskall i editoren der en funksjon print, som skriver ut strengen 'Hei verden!' til output-feltet. Pr\xF8v deg frem ved \xE5 trykke p\xE5 kj\xF8reknappen.",postDescription:"",initialCode:"print('Hei verden!')",solution:{solved:"",code:""}},{title:"Koding",description:"Kode er det samme som en oppskrift som maskinene v\xE5re f\xF8lger bastant. Det betyr at maskinen din skriver ut n\xF8yaktig hva som er mellom ' tegnene i funksjonskallet for print. Erstatt progg.it med ditt eget navn s\xE5 vil du f\xE5r en hilsen fra din egen maskin.",postDescription:"",initialCode:"print('Hei mitt navn er progg.it')",solution:{solved:"",code:""}},{title:"Variabler av tall",description:"I matematikken l\xE6rer vi om ligninger med ukjente variabler der v\xE5r oppgave som oftest er \xE5 finne ut hva variabelen er lik. Dette fungerer litt annerledes i programmering hvor vi er sjefen. Vi bestemmer hva variabelen skal v\xE6re lik. I editoren s\xE5 ser du en variabel x som vi har satt lik 3. Pr\xF8v \xE5 bytt ut 3 med ditt favorittall og trykk p\xE5 kj\xF8r",postDescription:"Funksjonen print kan ta hvilke som helst variabler og printer fortsatt ut som om vi hadde byttet ut variabelen med verdien.",initialCode:`x = 3
print(x)`,solution:{solved:"",code:""}},{title:"Variabler av strenger",description:"Variabler kan ikke bare v\xE6re tall, men tekststrenger ogs\xE5. Variabler kan ogs\xE5 hete nesten hva som helst s\xE5 lenge variabelnavnet begynner med en bokstav. Trykk p\xE5 kj\xF8r og se resultatet.",postDescription:"",initialCode:`var1 = 'Jeg heter var1 og er en variabel'
print(var1)`,solution:{solved:"",code:""}},{title:"Feil variabelnavn?",description:"Variabler kan hete nesten hva som helst. Nesten...",postDescription:"P\xE5 output-feltet, ser du v\xE5r f\xF8rste feilmelding! Den forklarer at kildekoden v\xE5r inneholder s\xE5kalt 'bad input' og hvilket linjenummer feilen f\xF8rst forekommer. Alts\xE5 variabelnavn kan ikke starte med et tall.",initialCode:`1var = 'Jeg heter 1var og er en variabel'
print(1var)`,solution:{solved:"",code:""}},{title:"Uttrykk",description:"I editoren ser du et eksempel med to variabler x og y med en linje for \xE5 printe summen av disse variablene. Pr\xF8v deg frem med \xE5 trykke p\xE5 kj\xF8reknappen!",postDescription:"",initialCode:`x = 50
y = 30
print(x + y)`,solution:{solved:"",code:""}},{title:"Feil i kildekoden",description:"Her mangler det noe. Kanskje det g\xE5r av likevel?",postDescription:`Imotsetning til oss mennesker, s\xE5 m\xE5 maskinene vi jobber med, ta alt med teskje. Det betyr at alle paranteser av alle typer m\xE5 han en start og sluttparantes. Alle kvotteringstegn som '' og "" m\xE5 avsluttes. Feilmeldingen i output-feltet forklarer at dette er en syntaksfeil. Det betyr at det er en feil i kildekoden som ikke f\xF8lger reglene i Python. Litt som en skrivefeil.`,initialCode:"print('Hei verden!'",solution:{solved:"",code:""}},{title:"Kvadratroten",description:"Python er et utrolig sterkt spr\xE5k med masse biblioteker som gj\xF8r koding mye enklere for oss. F\xF8r vi bruker et bibliotek s\xE5 m\xE5 vi importere biblioteket som du ser i linje 1 i editoren. Et bibliotek, math, er en bibliotek med masse matematiske funksjoner. I editoren s\xE5 ser du bruken av math sin funksjon for \xE5 regne ut kvadratroten av et tall eller variabel som er mellom parantesene. Skriv et program som skriver ut kvadratroten av 36.",postDescription:"I dette eksempelet s\xE5 er math et objekt, sqrt() en funksjon av math og x et argument til math.sqrt().",initialCode:`import math
x = 16
sqrtX = math.sqrt(x)
print(sqrtX)`,solution:{solved:6,code:`import math
x = 36
sqrtX = math.sqrt(x)
print('Kvadratroten til 36 er lik')
print(sqrtX)`}},{title:"Feil med funksjoner",description:"Ok, s\xE5 vi m\xE5 gi funksjonen math.sqrt() et tall for at den skal fungere. Men hva skjer om vi gir funskjonen mer enn ett tall?",postDescription:"Output-feltet gir oss en feilmelding om at funksjonen math.sqrt() tar n\xF8yaktig et argument. Derfor s\xE5 vet ikke funksjonen hva den skal gj\xF8re med s\xE5 mange tall og gir oss en feilmelding slik at vi kan rette p\xE5 kildekoden.",initialCode:`import math
x = 16
sqrtX = math.sqrt(2,1,51)
print(sqrtX)`,solution:{solved:0,code:""}},{title:"Hva om vi sender inn en streng?",description:"S\xE5 feilmeldingen fortalte oss at math.sqrt() tar n\xF8yaktig et argument. Men betyr det ogs\xE5 strenger? Hvordan regner man ut kvadratroten av 'progg.it'?",postDescription:"N\xE5 fikk vi en helt annen feilmelding! Denne forteller oss at math.sqrt() kun tar imot tall som argument. For en kresen funksjon \u{1F621}",initialCode:`import math
sqrtX = math.sqrt('progg.it')
print(sqrtX)`,solution:{solved:0,code:""}},{title:"Pytagoras",description:"Pytagoras sin l\xE6resetning handler om at summen av arealene til katetene i en rettvinklet trekant er lik arealet til hypotenusen. Skriv et program som regner og skriver ut hypotenusen til en trekant der katetene er lik 5 og 12.",postDescription:"Woho! Veldig bra jobbet! Hittil, har du l\xE6rt om variabler, tall og funksjonen sqrt i mattebiblioteket. Kun med denne kunnskapen s\xE5 har du klart \xE5 lage en kalkulator for \xE5 regne ut hypotenusen til en rettvinklet trekant. Men det er s\xE5 mye mer \xE5 l\xE6re om programmering og Python. Bare fortsett s\xE5nn :)",initialCode:"",solution:{solved:13,code:`import math
kat1 = 5
kat2 = 12
hyp = math.sqrt(kat1*kat1+kat2*kat2)
print('Hypotenusen til en rettvinklet trekant med kateter 5 og 12 er lik')
print(hyp)`}},{title:"Lister",description:"En liste i Python er definert med klammeparanteser []. Inneholdet i listen heter elementer som er skilt fra hverandre med kommategn. Akkurat som tekststrenger og tall s\xE5 kan ogs\xE5 lister v\xE6re variabler. som vist p\xE5 eksempelet i editoren. Trykk p\xE5 kj\xF8reknappen for \xE5 se hva som blir skrevet ut p\xE5 terminalen.",postDescription:"",initialCode:`liste = [67,31,53,6,97,1]
print(liste)`,solution:{solved:0,code:""}},{title:"Elementer i lister",description:"Noen ganger, vil vi kun skrive ut noen elementer i listen. Tenk p\xE5 en liste som en bok. En bok er jo egentlig en liste av ark. Ganske ofte n\xE5r vi leser fagv\xF8ker s\xE5 blir vi n\xF8dt til \xE5 sl\xE5 opp ting ved \xE5 lete etter sidenummeret. Sidenummeret i en bok, men for en liste, heter indeks. I editoren, ser du et eksempel der vi printer ut elementene p\xE5 plass 4 og 2 i listen. Kan du gjette hvilke tall som blir skrevet ut?",postDescription:"Gjettet du kanskje at nummer 6 og 31 skulle bli printet ut? Grunnen til at det heller ble 97 og 53 er fordi maskinene v\xE5re rett og slett begynner \xE5 telle fra 0. Pr\xF8v \xE5 se hva som skjer om du pr\xF8ver \xE5 printe ut indeks nummer 0 fra liste variablen.",initialCode:`liste = [67,31,53,6,97,1]
print(liste[4])
print(liste[2])`,solution:{solved:0,code:""}},{title:"Liste error",description:"Hva med indeks h\xF8yere enn st\xF8rrelsen til listen?",postDescription:"Akkurat som om vi skulle bla til side 100 i en bok med kun 2 sider s\xE5 vil ikke dette g\xE5. Feilmeldingen forklarer at indeksen v\xE5r er 'out of bounds' som betyr at den er utenfor grensen til listen. I tillegg s\xE5 gir feilmeldingen beskjed om hvilken linjenummer i kildekoden v\xE5r, feilen forekommer. Veldig nyttig!",initialCode:`liste = [3,14]
print(liste[100])`,solution:{solved:0,code:""}},{title:"Funksjonen range",description:"Denne funksjonen tar inn to tall og spytter ut en liste med tall fra det f\xF8rste gitte tallet til det andre gitte tallet. P\xE5 editoren, ser du et eksempel hvor vi kaller p\xE5 range med tall 0 og 10.",postDescription:"Vi kan aksessere range verdien som en liste og bruke klammeparantesene []. I dette tilfellet skulle vi printe plass nummer 3 i listen.",initialCode:`liste = range(0,10)
print(liste[3])`,solution:{solved:0,code:""}},{title:"L\xF8kker",description:"Datamaskinen er utrolig flink til \xE5 gj\xF8re en ting mange ganger og gi oss kjappe resultater. Tenk deg om vi fikk i oppgave om \xE5 telle til 100. Det tar litt tid for oss mennesker \xE5 ramse opp alle tallene. Ordet 'for' er et n\xF8kkelord i som sier til damaskinen at vi har et stykke kode som vi vil kj\xF8re mange ganger. I editoren, ser du et eksempel p\xE5 hvordan en l\xF8kke er skrevet i Python hvor print funksjonen blir kalt 25 ganger og printer ut alle tallene fra 25 til 50. Endre p\xE5 l\xF8kken slik at print skriver ut alle tall fra 0 til 100.",postDescription:"",initialCode:`for i in range(25,50):
	print(i)`,solution:{solved:0,code:""}},{title:"Hva er indentering?",description:"Indentering er rett og slett fire mellomrom eller en tab med tab-knappen p\xE5 tasturet som forteller maskinen at hvilken del av kildekoden tilh\xF8rer en annen del av koden. Hva som om vi har feil indentering i denne l\xF8kken?",postDescription:"Da f\xE5r vi en feilmelding som forteller oss at maskinen ikke skj\xF8nner hvor variabel 'i' kommer fra i linje 2. Dette er fordi variabelen 'i' kun kan brukes i kode som tilh\xF8rer l\xF8kken v\xE5r.",initialCode:`for i in range(25,50):
print(i)`,solution:{solved:0,code:""}}];export{e as default};
